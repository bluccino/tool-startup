#!/bin/bash
# stup - startup standard bash working environment from scratch

   if [ "$*" == "-?" ] || [ "$*" == "--help" ] || [ "$*" == "--?" ]; then
      stup ---g "usage: startup standard bash working environment from scratch (version `stup --version`)"
      stup ---c "targets:"
      echo      '  1) directory creation of ~/bin, ~/etc, ~/tmp'
      echo      '  2) installation of script ~/bin/prompt.sh'
      echo      '  3) installation of script ~/bin/stuprc.sh'
      echo      '  4) sourcing ~/bin/stuprc.sh from .bashrc'
      echo      '  5) installation of curl'
      echo      '  6) installation of git'
      echo      '  7) installation of python 3.11'
      echo      '  8) installation of pip'
      echo      '  9) installation of pimp, ec, idb and wd'
      stup ---c 'tasks of script ~/bin/stuprc.sh:'
      echo      '  a) adding ~/bin at the beginning of $PATH'
      echo      '  b) exporting BIN=~/bin, ETC=~/etc, TMP=~/tmp'
      echo      '  c) exporting BLU=https://github.com/bluccino'
      echo      '  d) providing alias wd and activate'
      echo      ''
      stup ---g 'system update commands:'
      echo      '  stup --apt            # update advanced packaging tool'

      if [ "$*" != "-?" ]; then  # comprehensive help
         stup ---g 'enhanced commands'
         echo      '  . bash ~stup -!    # install stup in a binary directory'
         echo      '  stup --update      # stup version update'
         echo      '  . stup --prompt    # set standard prompt'
         stup ---g 'environment variables:'
         echo      '  WORKDIR:   path of current working directory'
         echo      '  WORKIDB:   path of info database (storing label related info)'
      fi
      return 0 2>/dev/null || exit 0  # safe return/exit
   fi

#===============================================================================
# stup --version (stup --v)  # print version
#===============================================================================

   if [ "$*" == "--version" ] || [ "$*" == "--v" ]; then
      echo "1.0.0a"
      return 0 2>/dev/null || exit 0  # safe return/exit
   fi

#-------------------------------------------------------------------------------
#===============================================================================
# examine whether this script is running in sourced/unsourced mode
# - note: each dispatching clause needs to unset _SOURCED
#===============================================================================
#-------------------------------------------------------------------------------

   (return 0 2>/dev/null) && _SOURCED=1 || _SOURCED=0  # determine _SOURCED

#-------------------------------------------------------------------------------
# . stup --prompt  # setup standard prompt
#-------------------------------------------------------------------------------

   if [ "$*" == "--prompt" ]; then
      if [ "$_SOURCED" == 0 ]; then
         stup ---r "bad command line: stup $*"
         echo      "    this command must be sourced (. stup --prompt)!"
      fi

      export PS1="\[\e[35m\]\W\[\e[m\] $ "
      unset _SOURCED
      return 0 2>/dev/null || exit 0  # safe return/exit
   fi

#-------------------------------------------------------------------------------
# . ~stup -!  # install ~stup in ~/bin/
#-------------------------------------------------------------------------------

   if [ "$*" == "-!" ]; then
      if [ "$_SOURCED" == 0 ]; then
         stup ---r "bad command line: bash ~stup -! (or: ./~stup -!)"
         echo      "    this command must run in sourced mode!"
         unset _SOURCED
         return 1 2>/dev/null || exit 1  # safe return/exit
      fi

      if [ "$BIN" == "" ]; then
         export BIN=~/bin
      fi

      _ERR="0"
      echo $PATH | grep "$BIN:" >/dev/null || _ERR="1"

      if [ "$_ERR" != "0" ]; then
         export PATH=$BIN:$PATH
      fi

      source ~stup --prompt
      bash ~stup ---!                 # self install

      unset _ERR
      unset _SOURCED
      return 0 2>/dev/null || exit 0  # safe return/exit
   fi

#-------------------------------------------------------------------------------
#===============================================================================
# after here only non sourced execution is allowed
#===============================================================================
#-------------------------------------------------------------------------------

    if [ "$_SOURCED" != 0 ]; then
        stup ---r "bad command line: source stup $* (or: . stup $*)"
        echo      "    this command is not allowed to run in sourced mode!"
        unset _SOURCED
        return 1 2>/dev/null || exit 1  # safe return/exit
    fi

#===============================================================================
# stup --apt   # update advanced packaging tool
#===============================================================================

   if [ "$*" == "--apt" ]; then
      stup ---g '=== downloads latest package informations ...'
      stup ---y 'sudo apt update'
      sudo apt update

      stup ---g '=== upgrade installed packages to latest versions ...'
      stup ---y 'sudo apt upgrade'
      sudo apt upgrade
      exit 1
   fi

#===============================================================================
# ~stup ---!   # install in a system binary directory
#===============================================================================

   if [ "$*" == "---!" ]; then
      if [ ! -f ~stup ]; then
         bash ~stup ---r "error: stup -!" >&2
         echo      "       file ~stup not found!" >&2
         exit 1
      fi
      chmod +x ~stup

      if [ ! -d "$BIN" ]; then
         echo "missing ~/bin directory"
         #read -p "shall I create a ~/bin directory [Y/n]?" ANS
		     #if [ "$ANS" == "Y" ] || [ "$ANS" == "y" ] || [ "$ANS" == "" ]; then
         bash ~stup ---g "=== creating ~/bin"
         mkdir $BIN
		     #fi
      fi

      if [ "$BIN" == "" ]; then  # quit
         exit 0
      fi

      ERR="0"
      touch $BIN/_junk_ >/dev/null || ERR="1"
      rm -f $BIN/_junk_ >/dev/null

      bash ~stup ---g "=== installing stup in $BIN ..."
      if [ "$ERR" == "0" ]; then       # no write protection
         bash ~stup ---y "  cp ~stup $BIN/stup"
         cp ~stup $BIN/stup || exit 1
      else                             # write protection
         bash ~stup ---y "  this is a protected directory which uses a password!"
         bash ~stup ---y "  sudo cp ~stup $BIN/stup"
         sudo cp ~stup $BIN/stup || exit 1
      fi
      bash ~stup ---g "=== sucessful installation of stup"
      echo '  => enter: stup -?   # to see usage'

      rm -f ~stup                      # cleanup
      exit 0
   fi

#===============================================================================
# stup ---directories   # generate list of install directories
#===============================================================================

   if [ "$*" == "--directories" ]; then
      LIST=''
      for CHUNK in $(echo "$PATH" | sed 's/:/ /g')
      do
         LIST="$LIST $CHUNK"
      done
      echo $LIST
      exit 0
   fi

#===============================================================================
# stup --update   # update current stup installation to latest version
#===============================================================================

	 if [ "$1" == "--update" ]; then
	    URL=https://raw.githubusercontent.com/bluccino/tool-stup/master/bin/stup
      STUP=`which stup`

	    stup ---g '=== updating stup ...'

	    echo "  curl -s $URL >~stup"
	    curl -s $URL >~stup

      ERR="0"
      rm -f $STUP >/dev/null || ERR="1"

      if [ "$ERR" == "0" ]; then
	       echo "  cp ~stup $STUP"
         cp ~stup $STUP
	       echo "  chmod +x $STUP"
         chmod +x $STUP
      else
	       echo "  sudo cp ~stup $STUP"
         cp ~stup $STUP
	       echo "  sudo chmod +x $STUP"
         chmod +x $STUP
      fi

      echo '  rm -f ~stup'
      rm -f ~stup

      stup ---g "stup update complete (version `stup --version`)"
	    exit 0
	 fi

#===============================================================================
# helper: stup ---r 'text arg'   # internal helper: echo in red color
#         stup ---g 'text arg'   # internal helper: echo in green color
#         stup ---y 'text arg'   # internal helper: echo in yellow color
#===============================================================================

   if [ "$1" == "---r" ]; then
      printf "\x1b[31m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

   if [ "$1" == "---g" ]; then
      printf "\x1b[32m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

   if [ "$1" == "---y" ]; then
      printf "\x1b[33m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

   if [ "$1" == "---m" ]; then
      printf "\x1b[35m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

   if [ "$1" == "---c" ]; then
      printf "\x1b[36m";  shift;  echo "$*";  printf "\x1b[0m";  exit 0
   fi

#===============================================================================
# cannot deal with anything else ...
#===============================================================================

   printf "\x1b[31m";
   echo "bad command line: stup $*";  printf "\x1b[0m"
   echo '             for help invoke: stup --help'
   exit 1
